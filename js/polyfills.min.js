Array.from || (Array.from = function () { var t = Object.prototype.toString, e = function (e) { return "function" == typeof e || "[object Function]" === t.call(e) }, r = function (t) { var e = Number(t); return isNaN(e) ? 0 : 0 !== e && isFinite(e) ? (e > 0 ? 1 : -1) * Math.floor(Math.abs(e)) : e }, n = Math.pow(2, 53) - 1, o = function (t) { var e = r(t); return Math.min(Math.max(e, 0), n) }; return function (t) { var r = this, n = Object(t); if (null == t) throw new TypeError("Array.from requires an array-like object - not null or undefined"); var i, s = arguments.length > 1 ? arguments[1] : void 0; if (void 0 !== s) { if (!e(s)) throw new TypeError("Array.from: when provided, the second argument must be a function"); arguments.length > 2 && (i = arguments[2]) } for (var a, u = o(n.length), f = e(r) ? Object(new r(u)) : new Array(u), c = 0; c < u;)a = n[c], f[c] = s ? void 0 === i ? s(a, c) : s.call(i, a, c) : a, c += 1; return f.length = u, f } }()), function () { "function" != typeof Object.assign && (Object.assign = function (t) { "use strict"; if (null == t) throw new TypeError("Cannot convert undefined or null to object"); t = Object(t); for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; if (null != r) for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }) }(), function (t) { function e(t) { return "[object Array]" === Object.prototype.toString.call(t) } function r() { for (var t = 0; t < g.length; t++)g[t][0](g[t][1]); g = [], b = !1 } function n(t, e) { g.push([t, e]), b || (b = !0, T(r, 0)) } function o(t, e) { function r(t) { a(e, t) } function n(t) { f(e, t) } try { t(r, n) } catch (t) { n(t) } } function i(t) { var e = t.owner, r = e.state_, n = e.data_, o = t[r], i = t.then; if ("function" == typeof o) { r = v; try { n = o(n) } catch (t) { f(i, t) } } s(i, n) || (r === v && a(i, n), r === _ && f(i, n)) } function s(t, e) { var r; try { if (t === e) throw new TypeError("A promises callback cannot return that same promise."); if (e && ("function" == typeof e || "object" === (void 0 === e ? "undefined" : babelHelpers.typeof(e)))) { var n = e.then; if ("function" == typeof n) return n.call(e, function (n) { r || (r = !0, e !== n ? a(t, n) : u(t, n)) }, function (e) { r || (r = !0, f(t, e)) }), !0 } } catch (e) { return r || f(t, e), !0 } return !1 } function a(t, e) { t !== e && s(t, e) || u(t, e) } function u(t, e) { t.state_ === m && (t.state_ = w, t.data_ = e, n(h, t)) } function f(t, e) { t.state_ === m && (t.state_ = w, t.data_ = e, n(l, t)) } function c(t) { var e = t.then_; t.then_ = void 0; for (var r = 0; r < e.length; r++)i(e[r]) } function h(t) { t.state_ = v, c(t) } function l(t) { t.state_ = _, c(t) } function d(t) { if ("function" != typeof t) throw new TypeError("Promise constructor takes a function argument"); if (this instanceof d == !1) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."); this.then_ = [], o(t, this) } var y = t.Promise, p = y && "resolve" in y && "reject" in y && "all" in y && "race" in y && function () { var t; return new y(function (e) { t = e }), "function" == typeof t }(); "undefined" != typeof exports && exports ? (exports.Promise = p ? y : d, exports.Polyfill = d) : "function" == typeof define && define.amd ? define(function () { return p ? y : d }) : p || (t.Promise = d); var b, m = "pending", w = "sealed", v = "fulfilled", _ = "rejected", E = function () { }, T = "undefined" != typeof setImmediate ? setImmediate : setTimeout, g = []; d.prototype = { constructor: d, state_: m, then_: null, data_: void 0, then: function (t, e) { var r = { owner: this, then: new this.constructor(E), fulfilled: t, rejected: e }; return this.state_ === v || this.state_ === _ ? n(i, r) : this.then_.push(r), r.then }, catch: function (t) { return this.then(null, t) } }, d.all = function (t) { var r = this; if (!e(t)) throw new TypeError("You must pass an array to Promise.all()."); return new r(function (e, r) { for (var n, o = [], i = 0, s = 0; s < t.length; s++)n = t[s], n && "function" == typeof n.then ? n.then(function (t) { return i++ , function (r) { o[t] = r, --i || e(o) } }(s), r) : o[s] = n; i || e(o) }) }, d.race = function (t) { var r = this; if (!e(t)) throw new TypeError("You must pass an array to Promise.race()."); return new r(function (e, r) { for (var n, o = 0; o < t.length; o++)n = t[o], n && "function" == typeof n.then ? n.then(e, r) : e(n) }) }, d.resolve = function (t) { var e = this; return t && "object" === (void 0 === t ? "undefined" : babelHelpers.typeof(t)) && t.constructor === e ? t : new e(function (e) { e(t) }) }, d.reject = function (t) { return new this(function (e, r) { r(t) }) } }("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : void 0), function () { if ("content" in document.createElement("template")) return !1; for (var t = document.getElementsByTagName("template"), e = t.length, r = 0; r < e; ++r) { for (var n = t[r], o = n.childNodes, i = document.createDocumentFragment(); o[0];)o[0].nodeType === Node.ELEMENT_NODE ? i.appendChild(o[0]) : o[0].parentNode.removeChild(o[0]); n.content = i } }(), function () { function t(t, e) { e = e || { bubbles: !1, cancelable: !1, detail: void 0 }; var r = document.createEvent("CustomEvent"); return r.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), r } if ("function" == typeof window.CustomEvent) return !1; t.prototype = window.Event.prototype, window.CustomEvent = t }(), function (t) { "use strict"; function e(t) { if ("string" != typeof t && (t = String(t)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t)) throw new TypeError("Invalid character in header field name"); return t.toLowerCase() } function r(t) { return "string" != typeof t && (t = String(t)), t } function n(t) { var e = { next: function () { var e = t.shift(); return { done: void 0 === e, value: e } } }; return m.iterable && (e[Symbol.iterator] = function () { return e }), e } function o(t) { this.map = {}, t instanceof o ? t.forEach(function (t, e) { this.append(e, t) }, this) : Array.isArray(t) ? t.forEach(function (t) { this.append(t[0], t[1]) }, this) : t && Object.getOwnPropertyNames(t).forEach(function (e) { this.append(e, t[e]) }, this) } function i(t) { if (t.bodyUsed) return Promise.reject(new TypeError("Already read")); t.bodyUsed = !0 } function s(t) { return new Promise(function (e, r) { t.onload = function () { e(t.result) }, t.onerror = function () { r(t.error) } }) } function a(t) { var e = new FileReader, r = s(e); return e.readAsArrayBuffer(t), r } function u(t) { var e = new FileReader, r = s(e); return e.readAsText(t), r } function f(t) { for (var e = new Uint8Array(t), r = new Array(e.length), n = 0; n < e.length; n++)r[n] = String.fromCharCode(e[n]); return r.join("") } function c(t) { if (t.slice) return t.slice(0); var e = new Uint8Array(t.byteLength); return e.set(new Uint8Array(t)), e.buffer } function h() { return this.bodyUsed = !1, this._initBody = function (t) { if (this._bodyInit = t, t) if ("string" == typeof t) this._bodyText = t; else if (m.blob && Blob.prototype.isPrototypeOf(t)) this._bodyBlob = t; else if (m.formData && FormData.prototype.isPrototypeOf(t)) this._bodyFormData = t; else if (m.searchParams && URLSearchParams.prototype.isPrototypeOf(t)) this._bodyText = t.toString(); else if (m.arrayBuffer && m.blob && v(t)) this._bodyArrayBuffer = c(t.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]); else { if (!m.arrayBuffer || !ArrayBuffer.prototype.isPrototypeOf(t) && !_(t)) throw new Error("unsupported BodyInit type"); this._bodyArrayBuffer = c(t) } else this._bodyText = ""; this.headers.get("content-type") || ("string" == typeof t ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : m.searchParams && URLSearchParams.prototype.isPrototypeOf(t) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8")) }, m.blob && (this.blob = function () { var t = i(this); if (t) return t; if (this._bodyBlob) return Promise.resolve(this._bodyBlob); if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer])); if (this._bodyFormData) throw new Error("could not read FormData body as blob"); return Promise.resolve(new Blob([this._bodyText])) }, this.arrayBuffer = function () { return this._bodyArrayBuffer ? i(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(a) }), this.text = function () { var t = i(this); if (t) return t; if (this._bodyBlob) return u(this._bodyBlob); if (this._bodyArrayBuffer) return Promise.resolve(f(this._bodyArrayBuffer)); if (this._bodyFormData) throw new Error("could not read FormData body as text"); return Promise.resolve(this._bodyText) }, m.formData && (this.formData = function () { return this.text().then(y) }), this.json = function () { return this.text().then(JSON.parse) }, this } function l(t) { var e = t.toUpperCase(); return E.indexOf(e) > -1 ? e : t } function d(t, e) { e = e || {}; var r = e.body; if (t instanceof d) { if (t.bodyUsed) throw new TypeError("Already read"); this.url = t.url, this.credentials = t.credentials, e.headers || (this.headers = new o(t.headers)), this.method = t.method, this.mode = t.mode, r || null == t._bodyInit || (r = t._bodyInit, t.bodyUsed = !0) } else this.url = String(t); if (this.credentials = e.credentials || this.credentials || "omit", !e.headers && this.headers || (this.headers = new o(e.headers)), this.method = l(e.method || this.method || "GET"), this.mode = e.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && r) throw new TypeError("Body not allowed for GET or HEAD requests"); this._initBody(r) } function y(t) { var e = new FormData; return t.trim().split("&").forEach(function (t) { if (t) { var r = t.split("="), n = r.shift().replace(/\+/g, " "), o = r.join("=").replace(/\+/g, " "); e.append(decodeURIComponent(n), decodeURIComponent(o)) } }), e } function p(t) { var e = new o; return t.split(/\r?\n/).forEach(function (t) { var r = t.split(":"), n = r.shift().trim(); if (n) { var o = r.join(":").trim(); e.append(n, o) } }), e } function b(t, e) { e || (e = {}), this.type = "default", this.status = "status" in e ? e.status : 200, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in e ? e.statusText : "OK", this.headers = new o(e.headers), this.url = e.url || "", this._initBody(t) } if (!t.fetch) { var m = { searchParams: "URLSearchParams" in t, iterable: "Symbol" in t && "iterator" in Symbol, blob: "FileReader" in t && "Blob" in t && function () { try { return new Blob, !0 } catch (t) { return !1 } }(), formData: "FormData" in t, arrayBuffer: "ArrayBuffer" in t }; if (m.arrayBuffer) var w = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], v = function (t) { return t && DataView.prototype.isPrototypeOf(t) }, _ = ArrayBuffer.isView || function (t) { return t && w.indexOf(Object.prototype.toString.call(t)) > -1 }; o.prototype.append = function (t, n) { t = e(t), n = r(n); var o = this.map[t]; this.map[t] = o ? o + "," + n : n }, o.prototype.delete = function (t) { delete this.map[e(t)] }, o.prototype.get = function (t) { return t = e(t), this.has(t) ? this.map[t] : null }, o.prototype.has = function (t) { return this.map.hasOwnProperty(e(t)) }, o.prototype.set = function (t, n) { this.map[e(t)] = r(n) }, o.prototype.forEach = function (t, e) { for (var r in this.map) this.map.hasOwnProperty(r) && t.call(e, this.map[r], r, this) }, o.prototype.keys = function () { var t = []; return this.forEach(function (e, r) { t.push(r) }), n(t) }, o.prototype.values = function () { var t = []; return this.forEach(function (e) { t.push(e) }), n(t) }, o.prototype.entries = function () { var t = []; return this.forEach(function (e, r) { t.push([r, e]) }), n(t) }, m.iterable && (o.prototype[Symbol.iterator] = o.prototype.entries); var E = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"]; d.prototype.clone = function () { return new d(this, { body: this._bodyInit }) }, h.call(d.prototype), h.call(b.prototype), b.prototype.clone = function () { return new b(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new o(this.headers), url: this.url }) }, b.error = function () { var t = new b(null, { status: 0, statusText: "" }); return t.type = "error", t }; var T = [301, 302, 303, 307, 308]; b.redirect = function (t, e) { if (T.indexOf(e) === -1) throw new RangeError("Invalid status code"); return new b(null, { status: e, headers: { location: t } }) }, t.Headers = o, t.Request = d, t.Response = b, t.fetch = function (t, e) { return new Promise(function (r, n) { var o = new d(t, e), i = new XMLHttpRequest; i.onload = function () { var t = { status: i.status, statusText: i.statusText, headers: p(i.getAllResponseHeaders() || "") }; t.url = "responseURL" in i ? i.responseURL : t.headers.get("X-Request-URL"), r(new b("response" in i ? i.response : i.responseText, t)) }, i.onerror = function () { n(new TypeError("Network request failed")) }, i.ontimeout = function () { n(new TypeError("Network request failed")) }, i.open(o.method, o.url, !0), "include" === o.credentials && (i.withCredentials = !0), "responseType" in i && m.blob && (i.responseType = "blob"), o.headers.forEach(function (t, e) { i.setRequestHeader(e, t) }), i.send(void 0 === o._bodyInit ? null : o._bodyInit) }) }, t.fetch.polyfill = !0 } }("undefined" != typeof self ? self : void 0);